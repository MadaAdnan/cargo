<?php

namespace App\Filament\Branch\Resources;

use App\Filament\Branch\Resources\CompletTaskResource\Pages;
use App\Filament\Branch\Resources\CompletTaskResource\RelationManagers;

use App\Models\Task;
use BezhanSalleh\FilamentShield\Contracts\HasShieldPermissions;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;

use Illuminate\Database\Eloquent\Model;


class CompletTaskResource extends Resource implements HasShieldPermissions
{
    protected static ?string $model = Task::class;

    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';
    protected static ?string $label='مهامي المكتملة';
    protected static ?string $pluralLabel='مهامي المكتملة';
    protected static ?string $navigationGroup='مهامي';
    public static function getPermissionPrefixes(): array
    {
        return [
            'view',
            'view_any',
            'create',
            'update',
            'delete',
            'delete_any',
            'publish'
        ];
    }
/*
    public static function canAccess(): bool
    {
        return auth()->user()->hasPermissionTo('view_complet::task');

    }

    public static function canCreate(): bool
    {
        return auth()->user()->hasPermissionTo('create_complet::task'); // TODO: Change the autogenerated stub
    }

    public static function canEdit(Model $record): bool
    {
        return auth()->user()->hasPermissionTo('update_complet::task');
    }

    public static function canDelete(Model $record): bool
    {
        return auth()->user()->hasPermissionTo('delete_complet::task');
    }

    public static function canDeleteAny(): bool
    {
        return auth()->user()->hasPermissionTo('delete_complet::task');
    }*/

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                //
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->modifyQueryUsing(fn($query) => $query->where(fn($query)=>$query->where('user_id', auth()->id())->orWhere('delegate_id',auth()->id()))->where('is_complete', false)->latest())
            ->columns([
                Tables\Columns\TextColumn::make('id')->label('التسلسل'),
                Tables\Columns\TextColumn::make('from')->label('إستلام من')->color(fn($record)=>$record->is_sender?'danger':null),
                Tables\Columns\TextColumn::make('sender_phone')->label('هاتف المرسل')->url(fn($state) => "https://wa.me/" . trim($state, '+'), true),
                Tables\Columns\TextColumn::make('to')->label('التسليم لـ')->color(fn($record)=>$record->is_receive?'danger':null),
                Tables\Columns\TextColumn::make('receive_phone')->label('هاتف المستلم')->url(fn($state) => "https://wa.me/" . trim($state, '+'), true),

                Tables\Columns\TextColumn::make('task')->label('المهمة')->color('danger'),
                Tables\Columns\TextColumn::make('created_at')->since()->label('منذ')->sortable(),
            ])
            ->filters([
                //
            ])
            ->actions([
//                Tables\Actions\EditAction::make(),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
//                    Tables\Actions\DeleteBulkAction::make(),
                ]),
            ]);
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListCompletTasks::route('/'),
            'create' => Pages\CreateCompletTask::route('/create'),
            'edit' => Pages\EditCompletTask::route('/{record}/edit'),
        ];
    }
}
