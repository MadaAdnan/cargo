<?php

namespace App\Filament\Employ\Resources\OrderResource\Pages;

use App\Enums\OrderStatusEnum;
use App\Filament\Employ\Resources\OrderResource;
use App\Models\Order;
use Filament\Actions;
use Filament\Resources\Pages\ListRecords;
use Filament\Resources\Pages\ListRecords\Tab;

use Illuminate\Database\Eloquent\Builder;

class ListOrders extends ListRecords
{
    protected static string $resource = OrderResource::class;


    protected function getHeaderActions(): array
    {
        return [
            Actions\CreateAction::make(),
        ];
    }



    public function getTabs(): array
    {
        return [
            Tab::make('all')->modifyQueryUsing(fn($query)=>$query->where('status','!=' ,""))->badge(Order::all()->count())
                /*->badge(Order::where('status','success')->count())*/->label('الكل'),
//            Tab::make('pending')->modifyQueryUsing(fn($query)=>$query->where('status',OrderStatusEnum::PENDING->value))->badge(Order::where('status',OrderStatusEnum::PENDING->value)->count())->label('بإنتظار الموافقة'),
//            Tab::make('agree')->modifyQueryUsing(fn($query)=>$query->where('status',OrderStatusEnum::AGREE->value))->badge(Order::where('status',OrderStatusEnum::AGREE->value)->count())->label('بإنتظار الإنهاء'),
            Tab::make('pick')->modifyQueryUsing(fn($query)=>$query->where('status',OrderStatusEnum::PICK->value))->badge(Order::where('status',OrderStatusEnum::PICK->value)->count())->label('تم الإلتقاط'),
            Tab::make('transfer')->modifyQueryUsing(fn($query)=>$query->where('status',OrderStatusEnum::TRANSFER->value))->badge(Order::where('status',OrderStatusEnum::TRANSFER->value)->count())->label('بإنتظار التسليم'),
            Tab::make('success')->modifyQueryUsing(fn($query)=>$query->where('status',OrderStatusEnum::SUCCESS->value))/*->badge(Order::where('status','success')->count())*/->label('منتهي'),
            Tab::make('canceled')->modifyQueryUsing(fn($query)=>$query->where('status',OrderStatusEnum::CANCELED->value))/*->badge(Order::where('status','success')->count())*/->label('ملغي'),
            Tab::make('returned')->modifyQueryUsing(fn($query)=>$query->where('status',OrderStatusEnum::RETURNED->value))/*->badge(Order::where('status','success')->count())*/->label('مرتجع'),

        ];
    }

    protected function getTableQuery(): ?Builder
    {
        return parent::getTableQuery()?->where(function($query){
            $query->where('pick_id',auth()->id());
            $query->orWhere('given_id',auth()->id());
            $query->orWhereHas('agencies',fn($query)=>$query->where('agencies.user_id',auth()->id()));
        })
            ->with('cityTarget','citySource','sender','receive','pick','given','branchSource','branchTarget','unit'); // TODO: Change the autogenerated stub
         // TODO: Change the autogenerated stub
    }
}
