<?php

namespace App\Filament\Employ\Resources\OrderResource\RelationManagers;

use App\Enums\ActivateAgencyEnum;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Notifications\Notification;
use Filament\Resources\RelationManagers\RelationManager;
use Filament\Tables;
use Filament\Tables\Table;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletingScope;

class AgenciesRelationManager extends RelationManager
{
    protected static string $relationship = 'agencies';
protected static ?string $title="المهام";
    protected function canCreate(): bool
    {
        return false;
        return parent::canCreate(); // TODO: Change the autogenerated stub
    }

    public function form(Form $form): Form
    {
        return $form
            ->schema([
                Forms\Components\Select::make('activate')->options([
                    ActivateAgencyEnum::PENDING->value => ActivateAgencyEnum::PENDING->getLabel(),
                    ActivateAgencyEnum::COMPLETE->value => ActivateAgencyEnum::COMPLETE->getLabel(),
                    ActivateAgencyEnum::CANCELED->value => ActivateAgencyEnum::CANCELED->getLabel(),
                ])->label('حالة المهمة'),
                Forms\Components\Textarea::make('msg')->label('ملاحظات'),
            ]);
    }

    public function table(Table $table): Table
    {
        return $table
            ->modifyQueryUsing(fn($query) => $query->where('user_id', auth()->id()))
            ->recordTitleAttribute('task')
            ->columns([
                Tables\Columns\TextColumn::make('task')->label('المهمة'),
                Tables\Columns\TextColumn::make('status')->label('نوع المهمة'),
                Tables\Columns\TextColumn::make('activate')->label('حالة المهمة'),
                Tables\Columns\TextColumn::make('msg')->label('ملاحظات'),
            ])
            ->filters([
                //
            ])
            ->headerActions([
                Tables\Actions\CreateAction::make(),
            ])
            ->actions([
                Tables\Actions\EditAction::make(),
//                Tables\Actions\DeleteAction::make(),

            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make(),
                ]),
            ]);
    }
}
