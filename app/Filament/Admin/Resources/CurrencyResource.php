<?php

namespace App\Filament\Admin\Resources;

use App\Filament\Admin\Resources\CurrencyResource\Pages;
use App\Filament\Admin\Resources\CurrencyResource\RelationManagers;
use App\Models\Currency;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletingScope;

class CurrencyResource extends Resource
{
    protected static ?string $model = Currency::class;
    protected static ?string $navigationGroup = 'الحسابات المالية';



    protected static ?string $pluralModelLabel = 'العملات';

    protected static ?string $label = 'العملات';
    protected static ?string $navigationLabel = 'العملات';
    protected static ?string $navigationIcon = 'fas-dollar-sign';

    public static function canDeleteAny(): bool
    {
        return false; // TODO: Change the autogenerated stub
    }
    public static function canDelete(Model $record): bool
    {
        return false; // TODO: Change the autogenerated stub
    }

    public static function canForceDelete(Model $record): bool
    {
        return false; // TODO: Change the autogenerated stub
    }
    public static function canForceDeleteAny(): bool
    {
        return false;// TODO: Change the autogenerated stub
    }

    public static function form(Form $form): Form
    {
        $main=Currency::where('is_main',true)->first();
        return $form
            ->schema([
                Forms\Components\Section::make('العملات')->schema([
                    Forms\Components\Grid::make()->schema([
                        Forms\Components\TextInput::make('name')->label('اسم العملة')->unique(ignoreRecord: true)->required(),
                        Forms\Components\TextInput::make('code')->label('رمز العملة')->unique(ignoreRecord: true)->required(),
                    ]),
                    Forms\Components\Grid::make()->schema([
                        Forms\Components\TextInput::make('value')->label(fn()=>'كل 1 '.$main?->name .' تساوي')->required(),
                        Forms\Components\TextInput::make('down_value')->label(fn()=>'سعر الشراء')->required(),
                        Forms\Components\TextInput::make('up_value')->label(fn()=>'سعر المبيع')->required(),
                        Forms\Components\Toggle::make('is_main')->label('عملة رئيسية')->visible($main==null),

                    ])
                ])
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                Tables\Columns\TextColumn::make('name')->label('اسم العملة'),
                Tables\Columns\TextColumn::make('code')->label('رمز العملة'),
                Tables\Columns\TextColumn::make('is_main')->label('نوع العملة')->formatStateUsing(fn($state)=>$state?'رئيسية':'')->color(fn($state)=>$state?'danger':null),
                Tables\Columns\TextInputColumn::make('value')->label('سعر 1 من العملة الرئيسية')->extraInputAttributes(fn($record)=>$record->is_main?['readonly'=>'readonly']:[]),
                Tables\Columns\TextInputColumn::make('down_value')->label('سعر الشراء')->extraInputAttributes(fn($record)=>$record->is_main?['readonly'=>'readonly']:[]),
                Tables\Columns\TextInputColumn::make('up_value')->label('سعرالمبيع')->extraInputAttributes(fn($record)=>$record->is_main?['readonly'=>'readonly']:[]),
                Tables\Columns\TextColumn::make('updated_at')->since()->label('آخر تعديل'),


            ])
            ->filters([
                //
            ])
            ->actions([
                Tables\Actions\EditAction::make(),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make(),
                ]),
            ]);
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListCurrencies::route('/'),
            'create' => Pages\CreateCurrency::route('/create'),
            'edit' => Pages\EditCurrency::route('/{record}/edit'),
        ];
    }
}
